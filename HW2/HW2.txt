Описание задания.

 1 уровень сложности: 1.Как отказаться от изменений в файле (файлах) находящийся в рабочем каталоге (work directory)?

	git checkout имя файла

2.Как вернуть файл из индекса в рабочий каталог?

	git restore --staged имя файлa

3.Как исправить, отменить  ошибочный commit ?

	до комманды git push
	(git add имя файла)
	git commit --amend -m "Correct COMMENT"

	git log -g
	git log --walk-reflogs
   	git checkout SHA-1код //Нужный коммит
	git reset HEAD^количество коммитов в истории (1 ^ =        1commit)
    или git reset HEAD~количество коммитов в истории(пишем         число).
    
    Исправляем ошибки
    Делаем новый коммит(git commit -am "Comment")
	git push
	



4.Как исправить коммит отправленный на сервер GitHub?
	git revert HEAD
	в открывшемся редакторе пишем комментарий
	сохраняем и выходим
	git push --force

    Но лучше склонировать репозиторий заново
	

5.Как создать новую ветку и переключится в нее?
	git brunch имя ветки
	git checkout имя ветки

5.В чем отличение между fast-forward merge  and non fast-	forfard merge?

	fast-forward merge добавляет в ветку недостающие 	коммиты, 
	если в этой ветке не было изменений,
	а non fast-forfard merge объединяет все коммиты из 	обеих веток
	в один коммит


6.Когда может возникнуть конфликт слияния веток, как  его разрешить?

    Если мы с коллегой работали с одним файлом и коллега успел
    закоиммитить изменения раньше.
 
    git fetch
    git merge

    git покажет где конфликт.
    Oткрываем файл, разрешаем конфликт вручную, сохраняем     изменения.
    git commit -am "COMMIT"
    git push



 

7.Можно ли удалить ветку? Как? 

git brunch -d имя ветки

В ответах на вопросы 1-4, 7 необходимо указать конкретные команда git. 
На 5 и 6 вопросы дать объяснение своими словами.

